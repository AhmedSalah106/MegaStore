@model List<MegaMarket.ViewModel.ProductViewModel>

@{
    ViewData["Title"] = "Your Products - MegaStore";
}

<div class="container mt-5">
    <h2 class="text-center text-primary mb-4 fw-bold">
        <i class="fas fa-boxes"></i> Your Product Listings
    </h2>

    <p class="text-center text-muted">
        Manage your product inventory effortlessly. View details, update stock, and add products to your cart in just a few clicks!
    </p>

    @if (Model != null && Model.Count > 0)
    {
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var product in Model)
            {
                <div class="col">
                    <div class="card shadow-sm border-0">
                        <img src="@product.imageURL" class="card-img-top product-img" alt="Product Image">

                        <div class="card-body">
                            <h5 class="card-title fw-bold">@product.Name</h5>
                            <p class="card-text text-muted"><i class="fas fa-tag"></i> @product.Brand</p>

                            <div class="d-flex justify-content-between align-items-center">
                                <span class="badge bg-primary">@GetCategoryName(product.CategoryId)</span>
                                <span class="text-success fw-bold"><i class="fas fa-dollar-sign"></i> @product.Price</span>
                            </div>

                            <p class="mt-2 text-secondary">
                                <i class="fas fa-box-open"></i> Stock: <strong>@product.Amount</strong>
                            </p>

                            <div class="text-center mt-3">
                                <button class="btn btn-warning btn-sm" onclick="showQuantityModal('@product.Id', '@product.Name', '@product.Amount')">
                                    <i class="fas fa-cart-plus"></i> Add to Cart
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info text-center" role="alert">
            <i class="fas fa-info-circle"></i> <strong>Your store is empty!</strong> Add products now to start selling.
        </div>
    }
</div>

<!-- Quantity Selection Modal -->
<div class="modal fade" id="quantityModal" tabindex="-1" aria-labelledby="quantityModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="quantityModalLabel">Select Quantity</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p><strong>Product:</strong> <span id="modalProductName"></span></p>
                <form id="cartForm">
                    <input type="hidden" id="productId" name="id">
                    <label for="quantity" class="form-label">Enter Quantity:</label>
                    <input type="number" id="quantity" name="quantity" class="form-control" min="1" required oninput="validateQuantity()">
                    <div class="text-end mt-3">
                        <button type="submit" class="btn btn-primary">Add to Cart</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetCategoryName(int categoryId)
    {
        return categoryId switch
        {
            1 => "📱 Electronics",
            2 => "👕 Clothing",
            3 => "🏡 Home & Kitchen",
            4 => "📚 Books",
            5 => "💄 Beauty & Personal Care",
            _ => "🛍️ Other"
        };
    }
}

<style>
    .product-img {
        height: 200px;
        object-fit: cover;
        border-radius: 10px 10px 0 0;
    }

    .card {
        transition: transform 0.2s ease-in-out, box-shadow 0.3s ease-in-out;
    }

        .card:hover {
            transform: scale(1.03);
            box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.15);
        }

    .btn {
        width: 100%;
    }

    .text-muted {
        font-style: italic;
    }

    .btn-success {
        width: 300px;
        font-size: 1.2rem;
        font-weight: bold;
        padding: 10px;
    }
</style>

<script>
    let maxStock = 1;

    function showQuantityModal(productId, productName, availableStock) {
        document.getElementById("productId").value = productId;
        document.getElementById("modalProductName").innerText = productName;
        let quantityInput = document.getElementById("quantity");

        maxStock = parseInt(availableStock);
        quantityInput.value = 1;
        quantityInput.max = maxStock;

        var quantityModal = new bootstrap.Modal(document.getElementById("quantityModal"));
        quantityModal.show();
    }

    function validateQuantity() {
        let quantityInput = document.getElementById("quantity");
        let enteredValue = parseInt(quantityInput.value);

        if (enteredValue > maxStock) {
            alert(`You cannot enter more than ${maxStock} units.`);
            quantityInput.value = maxStock;
        } else if (enteredValue < 1 || isNaN(enteredValue)) {
            quantityInput.value = 1;
        }
    }

    document.getElementById("cartForm").addEventListener("submit", function (event) {
        event.preventDefault();

        let productId = document.getElementById("productId").value;
        let quantity = document.getElementById("quantity").value;

        if (quantity < 1 || quantity > maxStock) {
            alert("Please enter a valid quantity.");
            return;
        }

        window.location.href = `/Product/AddToCart?id=${encodeURIComponent(productId)}&quantity=${encodeURIComponent(quantity)}`;
    });
</script>

<script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
