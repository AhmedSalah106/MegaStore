@model VendorProductsViewModel

@{
    ViewData["Title"] = "Your Products - MegaMarket";
}

<div class="container mt-5">
    <h2 class="text-center text-primary mb-4 fw-bold">Your Products</h2>

    <!-- Total Sales Section -->
    <div class="alert alert-success text-center fw-bold">
        Total Sales: <span class="text-primary fs-4">$@Model.TotalSailed.ToString("F2")</span>
    </div>

    <div class="text-end mb-3">
        <a href="@Url.Action("AddProduct", "Vendor")" class="btn btn-success">
            <i class="fas fa-plus"></i> Add New Product
        </a>
    </div>

    @if (Model.vendorProducts != null && Model.vendorProducts.Count > 0)

    {
            <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var product in Model.vendorProducts)

            {
                        <div class="col">
                            <div class="card shadow-sm border-0">
                                <img src="@product.imageURL" class="card-img-top product-img" alt="Product Image">

                                <div class="card-body">
                                    <h5 class="card-title fw-bold">@product.Name</h5>
                                    <p class="card-text text-muted">Brand: <strong>@product.Brand</strong></p>

                                    <div class="d-flex justify-content-between align-items-center">
                                        <span class="badge bg-primary">@GetCategoryName(product.CategoryId)</span>
                                        <span class="text-success fw-bold">$@product.Price</span>
                                    </div>

                                    <p class="mt-2 text-secondary">Stock: <strong>@product.Amount</strong></p>

                                    <!-- More Engaging Product Description -->
                                    <p class="text-muted">
                                        <i class="fas fa-info-circle"></i> <strong>Why You'll Love It:</strong> <br>
                                        ✅ @product.Description <br>
                                        🌟 <em>Perfect choice for quality lovers!</em>
                                    </p>

                                    <div class="d-flex justify-content-between mt-3">
                                        <a href="@Url.Action("Edit", "Vendor", new { id = product.Id })" class="btn btn-warning btn-sm">
                                            <i class="fas fa-edit"></i> Edit
                                        </a>
                                        <a href="@Url.Action("Delete", "Vendor", new { id = product.Id })" class="btn btn-danger btn-sm" 
                                           onclick="return confirm('Are you sure you want to delete this product?');">
                                            <i class="fas fa-trash"></i> Delete
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
            }
            </div>
    }

    else

    {
            <div class="alert alert-info text-center" role="alert">
                <strong>No products found!</strong> Add products to start selling.
            </div>
    }
</div>


<script src="/lib/jquery/dist/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.7/signalr.min.js" integrity="sha512-7SRCYIJtR6F8ocwW7UxW6wGKqbSyqREDbfCORCbGLatU0iugBLwyOXpzhkPyHIFdBO0K2VCu57fvP2Twgx1o2A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script>
    var hub = new signalR.HubConnectionBuilder()
        .withUrl("/ProductH") 
        .build();

    hub.start().then(function () {
        console.log("✅ SignalR Connected!");
    }).catch(function (err) {
        console.error("❌ Connection Error:", err);
    });

    hub.on("AddProductNotify", function (obj) {
        console.log("📢 New Product Added:", obj);

        function getCategoryName(categoryId) {
            const categories = {
                1: "Electronics",
                2: "Clothing",
                3: "Home & Kitchen",
                4: "Books",
                5: "Beauty & Personal Care"
            };
            return categories[categoryId] || "Other";
        }

        var newProductHtml = `
            <div class="col">
                <div class="card shadow-sm border-0">
                    <img src="${obj.imageURL}" class="card-img-top product-img" alt="Product Image">
                    <div class="card-body">
                        <h5 class="card-title fw-bold">${obj.name}</h5>
                        <p class="card-text text-muted">Brand: <strong>${obj.brand}</strong></p>
                        <div class="d-flex justify-content-between align-items-center">
                            <span class="badge bg-primary">${getCategoryName(obj.categoryId)}</span>
                            <span class="text-success fw-bold">$${obj.price}</span>
                        </div>
                        <p class="mt-2 text-secondary">Stock: <strong>${obj.amount}</strong></p>
                        <p class="text-muted">
                            <i class="fas fa-info-circle"></i> <strong>Why You'll Love It:</strong> <br>
                            ✅ ${obj.description} <br>
                            🌟 <em>Perfect choice for quality lovers!</em>
                        </p>
                        <div class="d-flex justify-content-between mt-3">
                            <a href="/Vendor/Edit/${obj.id}" class="btn btn-warning btn-sm">
                                <i class="fas fa-edit"></i> Edit
                            </a>
                            <a href="/Vendor/Delete/${obj.id}" class="btn btn-danger btn-sm"
                               onclick="return confirm('Are you sure you want to delete this product?');">
                                <i class="fas fa-trash"></i> Delete
                            </a>
                        </div>
                    </div>
                </div>
            </div>`;

        $(".row.row-cols-1").prepend(newProductHtml);
    });
</script>

<!-- Helper Function for Category Names -->
@functions {
    public string GetCategoryName(int categoryId)

    {

        return categoryId switch

        {

            1 => "Electronics",

            2 => "Clothing",

            3 => "Home & Kitchen",

            4 => "Books",

            5 => "Beauty & Personal Care",

            _ => "Other"

        };

    }
}

<!-- Custom Styling -->
<style>
    .product-img {
        height: 200px;
        object-fit: cover;
        border-radius: 10px 10px 0 0;
    }

    .card {
        transition: transform 0.2s ease-in-out, box-shadow 0.3s ease-in-out;
    }

    .card:hover {
        transform: scale(1.03);
        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.15);
    }

    .btn {
        width: 100%;
    }
</style>

<!-- FontAwesome Icons -->
<script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
